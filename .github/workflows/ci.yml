# This is a basic workflow to help you get started with Actions

name: CI - Lint and Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: [ main ]
  # Triggers the workflow on pull request events
  pull_request:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "lint-and-build"
  lint-and-build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Code
        uses: actions/checkout@v4

      # Sets up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack and Set Yarn Version
        run: |-
          corepack enable
          corepack prepare yarn@stable --activate

      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        id: yarn-cache # Give an id to the cache step to check if cache was hit
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-berry-${{ hashFiles('**/yarn.lock') }} # Differentiate key for Yarn Berry
          restore-keys: |
            ${{ runner.os }}-yarn-berry-

      # Installs dependencies
      - name: Install Dependencies
        run: yarn install --immutable

      # Runs the linter
      - name: Run Linter
        run: yarn lint

      # Builds the project
      - name: Build Project
        run: yarn build
