# Workflow for preview deployments on PRs
name: Preview Deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request events
  pull_request:
    types: [ opened, synchronize, reopened ]
  # Allows manual triggering of the workflow
  workflow_dispatch:

# Sets permissions for the workflow
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

# Configures concurrency settings for the workflow
concurrency:
  group: preview-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  preview:
    runs-on: ubuntu-latest
    environment:
      name: preview
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack and Set Yarn Version
        run: |
          corepack enable
          corepack prepare yarn@stable --activate

      - name: Cache Yarn
        id: yarn-cache
        uses: actions/cache@v4
        with:
          path: ~/.yarn/cache
          key: ${{ runner.os }}-yarn-berry-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-berry-

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Build Project
        run: yarn build
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          # Add a unique identifier for preview builds
          VITE_PREVIEW_ID: ${{ github.head_ref }}

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5
        with:
          # Use a unique path for preview deployments
          path: /preview/${{ github.head_ref }}

      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Add PR Comment
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = '${{ steps.deployment.outputs.page_url }}';
            const prNumber = context.issue.number;
            const branchName = context.payload.pull_request.head.ref;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: `ðŸš€ Preview deployment is ready!\n\nVisit: ${deploymentUrl}\n\nThis is a preview deployment for branch \`${branchName}\` (PR #${prNumber}).`
            }); 