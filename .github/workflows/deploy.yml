# Workflow to deploy the application to GitHub Pages
name: Deploy to GitHub Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: [ main ]
  # Triggers the workflow on pull request events for opened, synchronize, and reopened
  pull_request:
    types: [ opened, synchronize, reopened ]
  # Allows manual triggering of the workflow
  workflow_dispatch:

# Sets permissions for the workflow
permissions:
  contents: read
  pages: write
  id-token: write
  # pull-requests: write # Not strictly necessary as actions/deploy-pages handles PR comments

# Configures concurrency settings for the workflow
concurrency:
  group: pages
  cancel-in-progress: ${{ github.event_name != 'workflow_dispatch' && github.event_name != 'push' }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-and-deploy"
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Specifies the deployment environment for GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Code
        uses: actions/checkout@v4

      # Sets up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack and Set Yarn Version
        run: |-
          corepack enable
          corepack prepare yarn@stable --activate

      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-berry-${{ hashFiles('**/yarn.lock') }} # Differentiate key for Yarn Berry
          restore-keys: |
            ${{ runner.os }}-yarn-berry-

      # Installs dependencies
      - name: Install Dependencies
        run: yarn install --immutable

      # Builds the project
      - name: Build Project
        run: yarn build # Assumes build output is to 'dist'

      # Configures GitHub Pages
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      # Uploads the build artifact
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Path to the directory containing the static assets to deploy
          path: ./dist # Default Vite build output directory

      # Deploys the artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment # Assign an ID to this step to refer to its outputs
        uses: actions/deploy-pages@v4
        # This action automatically handles production and PR preview deployments
        # For PRs, it will post a comment with a preview URL.
        # For main branch pushes, it will deploy to the standard GitHub Pages URL.
